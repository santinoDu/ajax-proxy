{"version":3,"sources":["ProxyTable/index.js","Filters/FilterAdd/index.js","Filters/index.js","FetchedList/index.js","App.js","reportWebVitals.js","index.js"],"names":["Option","Select","ProxyTable","props","list","setList","filters","updateList","key","updateKey","updateValue","result","find","item","preview","text","content","firstLetter","includes","isXml","eyeIcon","EyeOutlined","style","marginLeft","src","xml","title","trigger","JSON","parse","e","console","log","columns","dataIndex","render","_","record","value","url","onChange","target","width","className","defaultValue","filtersSelect","mode","map","filter","name","formatContent","checked","active","onClick","textAlign","newData","uuidv4","type","marginBottom","rowClassName","bordered","dataSource","pagination","FilterAdd","onOk","visible","setVisible","useState","setName","setFilter","onCancel","span","TextArea","rows","placeholder","Filters","cardStyle","height","getDeleteHtml","index","onConfirm","splice","handleDelete","gutter","extra","editDisable","bodyStyle","maxHeight","overflow","overflowY","onValueChange","handleChange","highlight","code","languages","js","padding","fontSize","lineHeight","PlusOutlined","config","func","push","FetchedList","handleClearTable","selectedRowKeys","setSelectedRowKeys","rowSelection","selectedKeys","selectedRows","addKeys","deleteKeys","length","updateKeys","updateRows","row","float","slice","debugActiveName","App","setFilters","proxyStatus","setProxyStatue","fetchedList","setFetchedList","setAndStoreList","chrome","storage","local","set","useEffect","get","items","proxyTable","proxyFilters","window","addEventListener","event","message","data","source","action","current","filteredData","request","Modal","error","join","formator","temp","filtersKey","json","reduce","Function","call","filtersCall","stringify","checkedChildren","unCheckedChildren","postMessage","forEach","updateItem","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7c8a603.chunk.js","sourcesContent":["import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Table, Input, Button, Popover, Switch, Select } from 'antd';\nimport ReactJson from 'react-json-view';\nimport XMLViewer from 'react-xml-viewer'\nimport { v4 as uuidv4 } from 'uuid';\nimport { EyeOutlined } from '@ant-design/icons';\nimport './index.css';\nconst { Option } = Select;\n \nconst ProxyTable = (props) => {\n  const {\n    list,\n    setList,\n    filters,\n  } = props;\n\n  const updateList = (key, updateKey, updateValue) => {\n    const result = [...list]\n    const filter = list.find(item => item.key === key)\n    filter[updateKey] = updateValue\n    setList(result)\n  }\n\n  const handleDelete = (key) => {\n    setList(list.filter((item) => item.key !== key))\n  };\n\n  const handleAdd = () => {\n    const newData = {\n      key: uuidv4(),\n      content: `{\"a\": {\"b\": 2}}`,\n      filtersSelect: [],\n      active: true,\n    };\n    setList([...list, newData]);\n  };\n\n  const preview = (text) => {\n    let result = ''\n    let content = text || ''\n    const firstLetter = content[0]\n    if (!'<{'.includes(firstLetter)) {\n      return result;\n    }\n    const eyeStyle = { marginLeft: 10 }\n    try {\n      const isXml = firstLetter === '<'\n      const eyeIcon = <EyeOutlined style={eyeStyle} />\n      if (isXml) {\n        const src = <XMLViewer xml={content} />\n        return (\n          <Popover content={src} title=\"xml preview\" trigger=\"click\">\n            {eyeIcon}\n          </Popover>\n        )\n      } else {\n        const src = JSON.parse(content);\n        return (\n          <Popover content={<ReactJson src={src} />} title=\"json preview\" trigger=\"click\">\n            {eyeIcon}\n          </Popover>\n        )\n      }\n    } catch (e) {\n      console.log('eee', e)\n    }\n    return result\n  }\n\n  const columns = [\n    {\n      title: 'URL(or postData) includes string',\n      dataIndex: 'url',\n      render: (_, record) => (\n        <Input value={record.url} onChange={(e) => updateList(record.key, 'url', e.target.value )} />\n      ),\n    },\n    {\n      title: 'replace content',\n      dataIndex: 'content',\n      width: '30%',\n      render: (_, record) => \n        <>\n          <Input\n            value={record.content}\n            onChange={(e) => updateList(record.key, 'content', e.target.value )}\n            className=\"eye-input\"\n          />\n          {preview(record.content)}\n        </>,\n    },\n    {\n      title: 'formators (multiple, sequential execution)',\n      render: (_, record) => (\n        <>\n          <Select\n            defaultValue={record.filtersSelect}\n            mode=\"multiple\"\n            onChange={(value) => updateList(record.key, 'filtersSelect', value)} \n            className=\"eye-input\"\n          >\n            {\n              filters.map(filter => <Option key={filter.key}>{filter.name}</Option>)\n            }\n          </Select>\n          {preview(record.formatContent)}\n        </>\n      )\n    },\n    {\n      title: 'open status',\n      dataIndex: 'active',\n      render: (_, record) =>\n        <Switch checked={record.active} onChange={(checked) => updateList(record.key, 'active', checked)} />,\n    },\n    {\n      title: 'operation',\n      dataIndex: 'operation',\n      render: (_, record) =>\n        <a onClick={() => handleDelete(record.key)}>delete</a>,\n    },\n  ];\n\n  return (\n    <div className=\"proxy-table\">\n      <div style={{textAlign: 'right'}}>\n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        >\n          add new rule\n        </Button>\n      </div>\n      <Table\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={list}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n}\n\nexport default ProxyTable\n","import React, { useContext, useState, useEffect, useRef } from 'react';\n\nimport { Row, Col, Modal, Input, Form } from 'antd';\n\nconst FilterAdd = (props) => {\n  const {\n    onOk,\n    visible,\n    setVisible,\n  } = props;\n  const [name, setName] = useState('');\n  const [filter, setFilter] = useState('');\n  const filterPlaceholder = `function format(json) {\n    json.version = {a: '1.0.0'};\n    return json;\n  }`\n\n  const handleOk = () => {\n    if (!name || !filter) return;\n    onOk({name, filter});\n    setVisible(false)\n  }\n\n  const handleCancel = () => {\n    setVisible(false)\n  }\n\n  \n  return (\n    <Modal\n      title=\"add new filter\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n    >\n      <Row style={{marginBottom: 20}}>\n        <Col span={6}>title</Col>\n        <Col span={18}>\n          <Input value={name} onChange={(e) => {setName(e.target.value)}} />\n        </Col>\n      </Row>\n      <Row style={{marginBottom: 20}}>\n        <Col span={6}>filter</Col>\n        <Col span={18}>\n          <Input.TextArea\n            value={filter}\n            onChange={(e) => {setFilter(e.target.value)}} rows={10}\n            placeholder={filterPlaceholder}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default FilterAdd\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs/components/prism-core';\nimport 'prismjs/components/prism-clike';\nimport 'prismjs/components/prism-javascript';\nimport { Card, Row, Col, Popconfirm } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport { PlusOutlined } from '@ant-design/icons';\nimport FilterAdd from './FilterAdd';\n\nconst Filters = (props) => {\n  const {filters, onChange} = props\n  const [visible, setVisible] = useState(false);\n\n  const handleChange = (value, index) => {\n    if (filters[index].editDisable) return;\n    const result = [...filters]\n    result[index].filter = value;\n    onChange(result);\n  }\n\n  const handleDelete = (value, index) => {\n    const result = [...filters];\n    result.splice(index, 1);\n    onChange(result);\n  }\n\n  const handleShowAddBox = () => {\n    setVisible(true)\n  }\n\n  const handleAdd = (config) => {\n    const {\n      name,\n      func,\n      filter,\n    } = config;\n    const result = [...filters]\n    result.push({\n      key: uuidv4(),\n      name,\n      func,\n      filter,\n      editDisable: false,\n    })\n    onChange(result)\n  }\n\n  const cardStyle = {\n    height: '300px',\n  }\n\n  const getDeleteHtml = (item, index) => {\n    return (\n      <Popconfirm title=\"sure to delete?\" onConfirm={() => handleDelete(item, index)}>\n        <a>x</a>\n      </Popconfirm>\n    )\n  }\n\n  return (\n    <div style={{marginBottom: 20}}>\n      <div className=\"header\">Filters</div>\n      <Row gutter={16}>\n        {\n          filters.map((item, index) => (\n            <Col className=\"gutter-row\" span={6} key={item.key}>\n              <Card\n                title={item.name}\n                extra={item.editDisable ? '' : getDeleteHtml(item, index)}\n                bodyStyle={{maxHeight: '242px', overflow: 'hidden', overflowY: 'scroll'}}\n                style={cardStyle}\n              >\n                <Editor\n                  value={item.filter}\n                  onValueChange={(value) => handleChange(value, index)}\n                  highlight={code => highlight(code, languages.js)}\n                  padding={10}\n                />\n              </Card>\n            </Col>\n          ))\n        }\n        <Col className=\"gutter-row\" span={6}>\n          <Card onClick={handleShowAddBox} style={{...cardStyle, textAlign: 'center'}}>\n            <a style={{fontSize: '50px', lineHeight: '250px'}}>\n              <PlusOutlined />\n            </a>\n          </Card>\n        </Col>\n      </Row>\n      <FilterAdd onOk={handleAdd} visible={visible} setVisible={setVisible} />\n    </div>\n  )\n}\n\nexport default Filters;\n","import React, { useState } from 'react';\r\nimport { Table, Button } from 'antd';\r\nimport './index.css';\r\n \r\nconst FetchedList = (props) => {\r\n  const { list, onChange, handleClearTable } = props;\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const columns = [\r\n    {\r\n      title: 'url',\r\n      dataIndex: 'url',\r\n      width: '40%',\r\n    },\r\n    {\r\n      title: 'response',\r\n      dataIndex: 'content',\r\n      render: (_, record) => {\r\n        const content = record.content || '';\r\n        return content.length > 2000 ? `${content.slice(0, 2000)}...` : content\r\n      },\r\n    },\r\n  ];\r\n  const rowSelection = {\r\n    selectedRowKeys,\r\n    onChange: (selectedKeys, selectedRows) => {\r\n      const addKeys = selectedKeys.filter(key => !selectedRowKeys.includes(key))\r\n      const deleteKeys = selectedRowKeys.filter(key => !selectedKeys.includes(key))\r\n      const type = addKeys.length ? 'add' : 'delete';\r\n      const updateKeys = type === 'add' ? addKeys : deleteKeys;\r\n      const updateRows = selectedRows.filter(row => updateKeys.includes(row.key));\r\n      onChange(type, type === 'add' ? updateRows : deleteKeys)\r\n      setSelectedRowKeys(selectedKeys)\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"proxy-table\">\r\n      <div className=\"header\" style={{textAlign: 'right'}}>\r\n        <span style={{float: 'left'}}>fetched xhr</span>\r\n        <Button\r\n          onClick={handleClearTable}\r\n          type=\"primary\"\r\n          style={{\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          remove list\r\n        </Button>\r\n      </div>\r\n      <Table\r\n        className=\"fetched-list\"\r\n        bordered\r\n        dataSource={list}\r\n        columns={columns}\r\n        pagination={false}\r\n        rowSelection={rowSelection}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FetchedList\r\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { Switch, Modal } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport ProxyTable from './ProxyTable';\nimport Filters from './Filters';\nimport FetchedList from './FetchedList';\n// import json2xml from './json2xml';\n\n// const json2xmlKey = '0'\nconst debugActiveName = 'proxy-debug-status'\n\nfunction App() {\n  const [filters, setFilters] = useState([\n    // {\n    //   key: json2xmlKey,\n    //   name: 'json2xml',\n    //   editDisable: true,\n    //   filter: json2xml.toString(),\n    // },\n    {\n      key: '1',\n      name: 'example',\n      editDisable: false,\n      filter: `function format(json) {\n        json.version = '1.0.0';\n        return json;\n      }`\n    }\n  ]);\n  const [list, setList] = useState([]);\n  const [proxyStatus, setProxyStatue] = useState(false);\n  const [fetchedList, setFetchedList] = useState([]);\n  const setAndStoreList = (list) => {\n    setList(list)\n    chrome.storage.local.set({'proxyTable': list}, function() {\n      console.log('proxyTable saved');\n    });\n  }\n\n  useEffect(() => {\n    chrome.storage.local.get(['proxyTable', 'proxyFilters'], function(items) {\n      if (items.proxyTable) {\n        setList(items.proxyTable)\n      }\n      if (items.proxyFilters) {\n        setFilters(items.proxyFilters)\n      }\n    });\n\n    window.addEventListener('message', (event) => {\n      let message = event.data;\n      if (message) {\n        const source = message.source;\n        const action = message.action;\n        if (source === 'fetch-xhr') {\n          setFetchedList(current => [{...action, key: uuidv4()}, ...current].slice(0, 100));\n        }\n        if (source === debugActiveName) {\n          return setProxyStatue(action);\n        }\n        if (source === 'proxy-match-multiple') {\n          const {filteredData, request} = action;\n          return Modal.error({\n            title: 'find multiple results, please modify before proxy',\n            content: `${request.url} finds ${filteredData.map(item => item.url).join(',  ')} results`,\n            onOk() {},\n          });\n        }\n      }\n      \n    })\n  }, []);\n\n  const filtersCall = (filtersKey = [], content) => {\n    try {\n      const json = JSON.parse(content)\n      return filtersKey\n        .map(key => filters.find(item => item.key === key).filter)\n        .reduce((result, filter) => {\n          const wrap = () => \"{ return \" + filter + \" };\"\n          const func = new Function( wrap(filter) )\n          const a = func.call(null).call(null, result)\n          return a\n        }, json)\n    } catch(e) {\n      console.log('e', e)\n    }\n    return ''\n  }\n\n  const formator = (filtersSelect, content) => {\n    const temp = filtersCall(filtersSelect, content)\n    const contentString = typeof temp === 'object' ? JSON.stringify(temp) : temp\n    return contentString\n  }\n\n  const handleList = (list) => {\n    list.forEach(item => {\n      if (item.filtersSelect && item.filtersSelect.length) {\n        item.formatContent = formator(item.filtersSelect, item.content)\n      } else {\n        item.formatContent = item.content;\n      }\n    });\n    setAndStoreList(list)\n  }\n\n  const handleFilters = (filters) => {\n    setFilters(filters)\n    chrome.storage.local.set({'proxyFilters': filters}, function() {\n      console.log('proxyFilters saved');\n    });\n  }\n\n  const handleProxy = (checked) => {\n    setProxyStatue(checked);\n    window.postMessage({\n      action: checked,\n      source: debugActiveName,\n    }, '*');\n  }\n\n  const handleFetchedSelected = (type, updateItem) => {\n    // updateItem：add时位items，delete时为keys\n    if (type === 'add') {\n      setAndStoreList([...list, ...updateItem])\n    } else {\n      const result = list.filter(item => !updateItem.includes(item.key));\n      setAndStoreList(result);\n    }\n  }\n\n  const handleClearTable = () => {\n    setFetchedList([])\n  }\n\n  return (\n    <div className=\"App\">\n      <div>Proxy Status:<Switch checkedChildren=\"on\" unCheckedChildren=\"off\" checked={proxyStatus} onChange={handleProxy} /></div>\n      <ProxyTable filters={filters} list={list} setList={handleList} />\n      <Filters filters={filters} onChange={handleFilters} />\n      <FetchedList list={fetchedList} onChange={handleFetchedSelected} handleClearTable={handleClearTable} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}